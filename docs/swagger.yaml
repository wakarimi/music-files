basePath: /api/music-files-service
definitions:
  directory.createRequest:
    description: Request structure to create a new directory
    properties:
      path:
        type: string
    type: object
  directory.readAllResponse:
    description: List of directories
    properties:
      directories:
        items:
          $ref: '#/definitions/directory.readAllResponseItem'
        type: array
    type: object
  directory.readAllResponseItem:
    description: Directory details
    properties:
      dirId:
        type: integer
      lastScanned:
        type: string
      path:
        type: string
    type: object
  types.ErrorResponse:
    description: Standard error response
    properties:
      error:
        type: string
    required:
    - error
    type: object
host: localhost:8022
info:
  contact:
    email: zalimannard@mail.ru
    name: Dmitry Kolesnikov (Zalimannard)
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Wakarimi Music Files API
  version: "0.2"
paths:
  /dirs:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Successfully fetched all directories
          schema:
            $ref: '#/definitions/directory.readAllResponse'
        "500":
          description: Failed to fetch directories
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: Get all added directories for scanning
      tags:
      - Directories
    post:
      consumes:
      - application/json
      description: Adds a new directory
      parameters:
      - description: Details for the new directory
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/directory.createRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created directory
          schema:
            type: string
        "400":
          description: Failed to encode request or Invalid input
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "500":
          description: Failed to create directory
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: Create a directory
      tags:
      - Directories
  /dirs/{dirId}:
    delete:
      consumes:
      - application/json
      description: Deletes a directory using its unique identifier
      parameters:
      - description: Directory ID
        in: path
        name: dirId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Successfully deleted directory
          schema:
            type: string
        "400":
          description: Invalid dirId format
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "500":
          description: Failed to delete directory
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: Delete a directory
      tags:
      - Directories
  /dirs/{dirId}/scan:
    post:
      consumes:
      - application/json
      parameters:
      - description: Directory Identifier
        in: path
        name: dirId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Directory scanned successfully
          schema:
            type: string
        "400":
          description: Invalid dirId format
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "500":
          description: Failed to scan directory
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: Scan a directory by its ID
      tags:
      - Directories
  /dirs/scan-all:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Directories scanned successfully
          schema:
            type: string
        "500":
          description: Failed to scan directories
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: Scan all directories
      tags:
      - Directories
swagger: "2.0"
